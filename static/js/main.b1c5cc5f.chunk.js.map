{"version":3,"sources":["components/WeatherTab.js","components/HoroscopeTab.js","App.js","reportWebVitals.js","index.js"],"names":["WeatherTab","state","city","temp","feelsLike","high","low","forecast","windSpeed","windDir","weatherIcons","faCloud","faCloudRain","faSnowflake","navigator","geolocation","getCurrentPosition","position","loadWeather","coords","latitude","longitude","error","timeout","alert","lat","lon","fetch","then","res","json","data","gglData","setState","prevState","Math","round","dir","className","this","icon","dirCompass","React","Component","HoroscopeTab","sign","description","mood","color","number","time","signs","props","splice","indexOf","loadHoroscope","prevProps","snapshot","method","id","htmlFor","name","onChange","e","setSign","target","value","map","s","App","view","backgroundClass","date","views","backgroundClasses","buttonClasses","days","months","dateSuffix","Date","toDateString","split","day","month","year","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAIqBA,E,4MACjBC,MAAQ,CACJC,KAAM,GACND,MAAO,GACPE,KAAM,GACNC,UAAW,GACXC,KAAM,GACNC,IAAK,GACLC,SAAU,GACVC,UAAW,GACXC,QAAS,I,EAGbC,aAAe,CACX,OAAUC,IACV,KAAQC,IACR,KAAQC,K,uDAGZ,WAAqB,IAAD,OACZC,UAAUC,YACVD,UAAUC,YAAYC,oBAClB,SAAAC,GAAQ,OAAI,EAAKC,YAAYD,EAASE,OAAOC,SAAUH,EAASE,OAAOE,cACvE,SAAAC,GAAK,OAAI,EAAKJ,YAAY,WAAY,aAAY,CAACK,QAAS,MAEhEC,MAAM,6D,yBAId,SAAYC,EAAKC,GAAM,IAAD,OAClBC,MAAM,uDAAD,OAAwDF,EAAxD,gBAAmEC,EAAnE,2DAAgIE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,OAAOF,MAAK,SAAAG,GAC7JJ,MAAM,4DAAD,OAA6DF,EAA7D,YAAoEC,EAApE,sEAA4IE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,OAAOF,MAAK,SAAAI,GAAY,IAAD,cACxJA,EAAO,QAAY,GAAnB,mBADwJ,GAC7K9B,EAD6K,KACpKD,GADoK,gBAEpL,EAAKgC,UAAS,SAAAC,GAAS,kCACfA,GADe,IAEfhC,KAAMA,EAAI,UACVD,MAAOA,EAAK,WACZE,KAAMgC,KAAKC,MAAML,EAAI,KAAJ,MACjB3B,UAAW+B,KAAKC,MAAML,EAAI,KAAJ,YACtB1B,KAAM8B,KAAKC,MAAML,EAAI,KAAJ,UACjBzB,IAAK6B,KAAKC,MAAML,EAAI,KAAJ,UAChBxB,SAAUwB,EAAI,QAAY,GAAhB,KACVvB,UAAW2B,KAAKC,MAAML,EAAI,KAAJ,OACtBtB,QAAS0B,KAAKC,MAAML,EAAI,KAAJ,wB,wBAKxC,SAAWM,GACP,OAAIA,GAAO,QAAUA,EAAM,MAAc,IAChCA,GAAO,OAASA,EAAM,MAAc,MACpCA,GAAO,OAASA,EAAM,MAAc,KACpCA,GAAO,OAASA,EAAM,MAAc,MACpCA,GAAO,OAASA,EAAM,OAAe,IACrCA,GAAO,QAAUA,EAAM,OAAe,MACtCA,GAAO,QAAUA,EAAM,OAAe,KACtCA,GAAO,QAAUA,EAAM,OAAe,MACtCA,GAAO,QAAUA,EAAM,OAAe,IACtCA,GAAO,QAAUA,EAAM,OAAe,MACtCA,GAAO,QAAUA,EAAM,OAAe,KACtCA,GAAO,QAAUA,EAAM,OAAe,MACtCA,GAAO,QAAUA,EAAM,OAAe,IACtCA,GAAO,QAAUA,EAAM,OAAe,MACtCA,GAAO,QAAUA,EAAM,OAAe,KACtCA,GAAO,QAAUA,EAAM,OAAe,MACnC,K,oBAGhB,WACI,OACI,sBAAKC,UAAU,+DAAf,UACI,oBAAIA,UAAU,GAAd,SAAkBC,KAAKtC,MAAMC,MAAX,6BAAyCqC,KAAKtC,MAAMC,KAApD,aAA6DqC,KAAKtC,MAAMA,MAAxE,OAClB,sBAAKqC,UAAU,oCAAf,UACI,sBAAKA,UAAU,cAAf,UACI,mBAAGA,UAAU,oBAAb,SAAkCC,KAAKtC,MAAME,MAAX,UAAsBoC,KAAKtC,MAAME,KAAjC,YAClC,mBAAGmC,UAAU,GAAb,SAAiBC,KAAKtC,MAAMG,WAAX,sBAAuCmC,KAAKtC,MAAMG,aACnE,uBAAMkC,UAAU,gCAAhB,UAAgD,mBAAGA,UAAU,OAAb,SAAqBC,KAAKtC,MAAMI,OAAS,mBACrFiC,UAAU,OAD2E,SACnEC,KAAKtC,MAAMK,YAErC,sBAAKgC,UAAU,cAAf,UACKC,KAAKtC,MAAMM,UAAY,cAAC,IAAD,CAAiB+B,UAAU,mBAAmBE,KAAMD,KAAK7B,aAAa6B,KAAKtC,MAAMM,YACzG,mBAAG+B,UAAU,YAAb,SAA0BC,KAAKtC,MAAMM,WACrC,mBAAG+B,UAAU,GAAb,SAAiBC,KAAKtC,MAAMQ,SAAX,gBAA+B8B,KAAKE,WAAWF,KAAKtC,MAAMQ,SAA1D,YAAsE8B,KAAKtC,MAAMO,UAAjF,uB,GAlFDkC,IAAMC,WCFzBC,E,4MACjB3C,MAAQ,CACJ4C,KAAM,GACNC,YAAa,GACbC,KAAM,GACNC,MAAO,GACPC,OAAQ,GACRC,KAAM,I,EAGVC,MAAQ,CAAC,YAAa,WAAY,SAAU,QAAS,SAAU,SAAU,SAAU,MAAO,QAAS,QAAS,UAAW,e,uDAEvH,WACQZ,KAAKa,MAAMP,OAAON,KAAKY,MAAME,OAAOd,KAAKY,MAAMG,QAAQf,KAAKa,MAAMP,MAAM,GAAIN,KAAKY,MAAME,OAAO,EAAG,EAAGd,KAAKa,MAAMP,OACnHN,KAAKgB,cAAchB,KAAKa,MAAMP,MAAQ,e,gCAG1C,SAAmBW,EAAWtB,EAAWuB,GACjCD,EAAUX,OAASN,KAAKa,MAAMP,MAAMN,KAAKgB,cAAchB,KAAKa,MAAMP,MAAQ,e,2BAGlF,SAAcA,GAAO,IAAD,OAChBlB,MAAM,2CAAD,OAA4CkB,EAA5C,cAA8D,CAC/Da,OAAQ,SACT9B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,OAAOF,MAAK,SAAAG,GAC3B,EAAKE,UAAS,SAAAC,GAAS,kCACfA,GADe,IAEfW,OACAC,YAAaf,EAAI,YACjBgB,KAAMhB,EAAI,KACViB,MAAOjB,EAAI,MACXkB,OAAQlB,EAAI,aACZmB,KAAMnB,EAAI,wB,oBAK1B,WAAU,IAAD,OACL,OACI,sBAAKO,UAAU,gFAAgFqB,GAAG,oBAAlG,UACI,qBAAIrB,UAAU,YAAd,mCAAiDC,KAAKtC,MAAM4C,KAA5D,OACA,sBAAKP,UAAU,wCAAf,UACI,mBAAGA,UAAU,YAAb,SAA0BC,KAAKtC,MAAM6C,cACrC,iCACI,uBAAOR,UAAU,YAAYsB,QAAQ,OAArC,8BACA,wBAAQD,GAAG,OAAOE,KAAK,OAAOC,SAAU,SAACC,GAAD,OAAO,EAAKX,MAAMY,QAAQD,EAAEE,OAAOC,QAA3E,SACK3B,KAAKY,MAAMgB,KAAI,SAAAC,GAAC,OAAI,wBAAQF,MAAOE,EAAf,SAAmBA,YAGhD,sBAAK9B,UAAU,YAAf,UACI,4BAAIC,KAAKtC,MAAM8C,MAAX,gBAA4BR,KAAKtC,MAAM8C,QAC3C,4BAAIR,KAAKtC,MAAM+C,OAAX,iBAA8BT,KAAKtC,MAAM+C,SAC7C,4BAAIT,KAAKtC,MAAMgD,QAAX,wBAAsCV,KAAKtC,MAAMgD,UACrD,4BAAIV,KAAKtC,MAAMiD,MAAX,sBAAkCX,KAAKtC,MAAMiD,qB,GArD/BR,IAAMC,WCE3B0B,E,4MACjBpE,MAAQ,CACJqE,KAAM,UACNC,gBAAiB,YACjBC,KAAM,GACN3B,KAAM,I,EAGV4B,MAAQ,CAAC,UAAW,YAAa,Q,EACjCC,kBAAoB,CAAC,QAAW,YAAa,UAAa,WAAY,KAAQ,W,EAC9EC,cAAgB,CAAC,QAAW,cAAe,UAAa,gBAAiB,KAAQ,e,EACjFC,KAAO,CAAC,IAAO,SAAU,IAAO,UAAW,IAAO,YAAa,IAAO,WAAY,IAAO,SAAU,IAAO,WAAY,IAAO,U,EAC7HC,OAAS,CAAC,IAAO,UAAW,IAAO,WAAY,IAAO,QAAS,IAAO,QAAS,IAAO,MAAO,IAAO,OAAQ,IAAO,OAAQ,IAAO,SAAU,IAAO,YAAa,IAAO,UAAW,IAAO,WAAY,IAAO,Y,EAC5MC,WAAa,CAAC,EAAK,KAAM,EAAK,KAAM,EAAK,M,uDAEzC,WAAqB,IAAD,UACiB,IAAIC,MAAOC,eAAeC,MAAM,KADjD,mBACTC,EADS,KACJC,EADI,KACGX,EADH,KACSY,EADT,KAEhB7C,KAAKN,UAAS,SAAAC,GAAS,kCAASA,GAAT,IAAoBsC,KAAK,YAAD,OAAc,EAAKI,KAAKM,GAAxB,aAAiC,EAAKL,OAAOM,GAA7C,aAAwDX,GAAxD,OAA+D,EAAKM,WAAWN,EAAK,KAAO,KAA3F,YAAmGY,U,oBAGtJ,WAAU,IAAD,OACL,OACI,sBAAK9C,UAAS,UAAKC,KAAKtC,MAAMsE,gBAAhB,YAAd,UACI,sBAAKjC,UAAU,8BAAf,UACI,gDACA,6BAAKC,KAAKtC,MAAMuE,OAChB,qBAAKlC,UAAU,iBAAf,SACKC,KAAKkC,MAAMN,KAAI,SAAAG,GAAI,OAChB,wBAAQhC,UAAS,qBAAgB,EAAKqC,cAAc,EAAK1E,MAAMqE,MAA9C,YAAuD,EAAKrE,MAAMqE,OAASA,EAAO,WAAa,IACxGe,QAAS,kBAAM,EAAKpD,UAAS,SAAAC,GAAS,kCAASA,GAAT,IAAoBoC,OAAMC,gBAAiB,EAAKG,kBAAkBJ,SADhH,SAEKA,YAKjB,sBAAKhC,UAAU,uBAAf,UACyB,YAApBC,KAAKtC,MAAMqE,MAAsB,cAAC,EAAD,IACb,cAApB/B,KAAKtC,MAAMqE,MAAwB,cAAC,EAAD,CAAczB,KAAMN,KAAKtC,MAAM4C,KAAMmB,QAAS,SAACnB,GAAD,OAAU,EAAKZ,UAAS,SAAAC,GAAS,kCAASA,GAAT,IAAoBW,yB,GArC1HH,IAAMC,WCQxB2C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5D,MAAK,YAAkD,IAA/C6D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b1c5cc5f.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faCloud, faCloudRain, faSnowflake} from \"@fortawesome/free-solid-svg-icons\";\n\nexport default class WeatherTab extends React.Component {\n    state = {\n        city: \"\",\n        state: \"\",\n        temp: \"\",\n        feelsLike: \"\",\n        high: \"\",\n        low: \"\",\n        forecast: \"\",\n        windSpeed: \"\",\n        windDir: \"\",\n    };\n\n    weatherIcons = {\n        \"Clouds\": faCloud,\n        \"Rain\": faCloudRain,\n        \"Snow\": faSnowflake,\n    };\n\n    componentDidMount() {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(\n                position => this.loadWeather(position.coords.latitude, position.coords.longitude),\n                error => this.loadWeather(42.360081, -71.058884), {timeout: 3000});\n        } else {\n            alert(\"Sorry, your browser does not support HTML5 geolocation.\");\n        }\n    }\n\n    loadWeather(lat, lon) {\n        fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=imperial&appid=3373b692a45fa1b95087370f4227da8c`).then(res => res.json().then(data => {\n            fetch(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${lon}&result_type=locality&key=AIzaSyCqAtfJQCTc951PiO9p5T6oTbT6RSWdvmA`).then(res => res.json().then(gglData => {\n                const [city, _, state, c] = gglData[\"results\"][0][\"address_components\"];\n                this.setState(prevState => (\n                    {...prevState,\n                        city: city[\"long_name\"],\n                        state: state[\"short_name\"],\n                        temp: Math.round(data['main']['temp']),\n                        feelsLike: Math.round(data['main']['feels_like']),\n                        high: Math.round(data['main']['temp_max']),\n                        low: Math.round(data['main']['temp_min']),\n                        forecast: data['weather'][0]['main'],\n                        windSpeed: Math.round(data['wind']['speed']),\n                        windDir: Math.round(data['wind']['deg']),\n                    }))\n            }))}));\n    }\n\n    dirCompass(dir) {\n        if (dir >= 348.75 || dir < 11.25) return \"N\";\n        else if (dir >= 11.25 && dir < 33.75) return \"NNE\";\n        else if (dir >= 33.75 && dir < 56.25) return \"NE\";\n        else if (dir >= 56.25 && dir < 78.75) return \"ENE\";\n        else if (dir >= 78.75 && dir < 101.25) return \"E\";\n        else if (dir >= 101.25 && dir < 123.75) return \"ESE\";\n        else if (dir >= 123.75 && dir < 146.25) return \"SE\";\n        else if (dir >= 146.25 && dir < 168.75) return \"SSE\";\n        else if (dir >= 168.75 && dir < 191.25) return \"S\";\n        else if (dir >= 191.25 && dir < 213.75) return \"SSW\";\n        else if (dir >= 213.75 && dir < 236.25) return \"SW\";\n        else if (dir >= 236.25 && dir < 258.75) return \"WSW\";\n        else if (dir >= 258.75 && dir < 281.25) return \"W\";\n        else if (dir >= 281.25 && dir < 303.75) return \"WNW\";\n        else if (dir >= 303.75 && dir < 326.25) return \"NW\";\n        else if (dir >= 326.25 && dir < 348.75) return \"NNW\";\n        else return \"\";\n    };\n\n    render() {\n        return (\n            <div className=\"weather-container row mx-auto text-center d-flex flex-column\">\n                <h4 className=\"\">{this.state.city && `Today's Weather in ${this.state.city}, ${this.state.state}:`}</h4>\n                <div className=\"row d-flex justify-content-around\">\n                    <div className=\"col my-auto\">\n                        <p className=\"large-display m-0\">{this.state.temp && `${this.state.temp} °F`}</p>\n                        <p className=\"\">{this.state.feelsLike && `Feels like: ${this.state.feelsLike}`}</p>\n                        <span className=\"d-flex justify-content-center\"><p className=\"mx-2\">{this.state.high}</p><p\n                            className=\"mx-2\">{this.state.low}</p></span>\n                    </div>\n                    <div className=\"col my-auto\">\n                        {this.state.forecast && <FontAwesomeIcon className=\"text-white fa-5x\" icon={this.weatherIcons[this.state.forecast]} />}\n                        <p className=\"mt-3 mb-0\">{this.state.forecast}</p>\n                        <p className=\"\">{this.state.windDir && `Wind: ${this.dirCompass(this.state.windDir)} ${this.state.windSpeed} mph`}</p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nexport default class HoroscopeTab extends React.Component {\n    state = {\n        sign: \"\",\n        description: \"\",\n        mood: \"\",\n        color: \"\",\n        number: \"\",\n        time: \"\",\n    };\n\n    signs = [\"Capricorn\", \"Aquarius\", \"Pisces\", \"Aries\", \"Taurus\", \"Gemini\", \"Cancer\", \"Leo\", \"Virgo\", \"Libra\", \"Scorpio\", \"Sagittarius\"];\n\n    componentDidMount() {\n        if (this.props.sign) {this.signs.splice(this.signs.indexOf(this.props.sign),1); this.signs.splice(0, 0, this.props.sign);}\n        this.loadHoroscope(this.props.sign || \"Capricorn\");\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.sign !== this.props.sign) this.loadHoroscope(this.props.sign || \"Capricorn\");\n    }\n\n    loadHoroscope(sign) {\n        fetch(`https://aztro.sameerkumar.website/?sign=${sign}&day=today`, {\n            method: 'POST',\n        }).then(res => res.json().then(data => {\n            this.setState(prevState => (\n                {...prevState,\n                    sign,\n                    description: data['description'],\n                    mood: data['mood'],\n                    color: data['color'],\n                    number: data['lucky_number'],\n                    time: data['lucky_time'],\n                }));\n        }));\n    }\n\n    render() {\n        return (\n            <div className=\"horoscope-container row mx-auto justify-content-center text-center text-white\" id=\"horoscope-content\">\n                <h4 className=\"comfortaa\">Today's Horoscope for {this.state.sign}:</h4>\n                <div className=\"border-top-white pt-3 mx-auto d-block\">\n                    <p className=\"comfortaa\">{this.state.description}</p>\n                    <span>\n                        <label className=\"comfortaa\" htmlFor=\"sign\">Zodiac Sun Sign:</label>\n                        <select id=\"sign\" name=\"sign\" onChange={(e) => this.props.setSign(e.target.value)}>\n                            {this.signs.map(s => <option value={s}>{s}</option>)}\n                        </select>\n                    </span>\n                    <div className=\"comfortaa\">\n                        <p>{this.state.mood && `Mood: ${this.state.mood}`}</p>\n                        <p>{this.state.color && `Color: ${this.state.color}`}</p>\n                        <p>{this.state.number && `Lucky Number: ${this.state.number}`}</p>\n                        <p>{this.state.time && `Lucky Time: ${this.state.time}`}</p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport WeatherTab from \"./components/WeatherTab\";\nimport HoroscopeTab from \"./components/HoroscopeTab\";\n\nexport default class App extends React.Component {\n    state = {\n        view: \"weather\",\n        backgroundClass: \"bg-clouds\",\n        date: \"\",\n        sign: \"\",\n    };\n\n    views = [\"weather\", \"horoscope\", \"news\"];\n    backgroundClasses = {\"weather\": \"bg-clouds\", \"horoscope\": \"bg-stars\", \"news\": \"bg-news\"};\n    buttonClasses = {\"weather\": \"btn-primary\", \"horoscope\": \"btn-secondary\", \"news\": \"btn-primary\"};\n    days = {\"Mon\": \"Monday\", \"Tue\": \"Tuesday\", \"Wed\": \"Wednesday\", \"Thu\": \"Thursday\", \"Fri\": \"Friday\", \"Sat\": \"Saturday\", \"Sun\": \"Sunday\"};\n    months = {\"Jan\": \"January\", \"Feb\": \"February\", \"Mar\": \"March\", \"Apr\": \"April\", \"May\": \"May\", \"Jun\": \"June\", \"Jul\": \"July\", \"Aug\": \"August\", \"Sep\": \"September\", \"Oct\": \"October\", \"Nov\": \"November\", \"Dec\": \"December\"};\n    dateSuffix = {\"1\": \"st\", \"2\": \"nd\", \"3\": \"rd\"};\n\n    componentDidMount() {\n        const [day, month, date, year] = new Date().toDateString().split(' ');\n        this.setState(prevState => ({...prevState, date: `Today is ${this.days[day]}, ${this.months[month]}, ${date}${this.dateSuffix[date%10] || \"th\"} ${year}`}))\n    }\n\n    render() {\n        return (\n            <div className={`${this.state.backgroundClass} mx-auto`}>\n                <div className=\"text-white text-center py-3\">\n                    <h1>Start Your Day</h1>\n                    <h3>{this.state.date}</h3>\n                    <div className=\"btn-group my-2\">\n                        {this.views.map(view => (\n                            <button className={`btn btn-lg ${this.buttonClasses[this.state.view]} ${this.state.view === view ? 'disabled' : ''}`}\n                                    onClick={() => this.setState(prevState => ({...prevState, view, backgroundClass: this.backgroundClasses[view]}))}>\n                                {view}\n                            </button>\n                        ))}\n                    </div>\n                </div>\n                <div className=\"container-fluid my-4\">\n                    {this.state.view === \"weather\" && <WeatherTab />}\n                    {this.state.view === \"horoscope\" && <HoroscopeTab sign={this.state.sign} setSign={(sign) => this.setState(prevState => ({...prevState, sign}))}/>}\n                </div>\n            </div>\n        );\n    }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}